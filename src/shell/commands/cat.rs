pub fn get_fake_file_content(file_path: &str) -> Option<String> {
    let res = match file_path {
        // System info files
        "/proc/cpuinfo" => Some(
            "processor\t: 0\r\nvendor_id\t: GenuineIntel\r\ncpu family\t: 6\r\nmodel\t\t: 158\r\nmodel name\t: Intel(R) Core(TM) i7-9700K CPU @ 3.60GHz\r\nstepping\t: 12\r\nmicrocode\t: 0xde\r\ncpu MHz\t\t: 3600.000\r\ncache size\t: 12288 KB\r\nphysical id\t: 0\r\nsiblings\t: 8\r\ncore id\t\t: 0\r\ncpu cores\t: 8\r\napicid\t\t: 0\r\ninitial apicid\t: 0\r\nfpu\t\t: yes\r\nfpu_exception\t: yes\r\ncpuid level\t: 22\r\nwp\t\t: yes\r\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx rdseed adx smap clflushopt intel_pt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp md_clear flush_l1d\r\nbugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit\r\nbogomips\t: 7200.00\r\nclflush size\t: 64\r\ncache_alignment\t: 64\r\naddress sizes\t: 46 bits physical, 48 bits virtual\r\npower management:\r\n\r\n".to_string()
        ),

        "/etc/passwd" => Some(
            "root:x:0:0:root:/root:/bin/bash\r\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\r\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\r\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\r\nsync:x:4:65534:sync:/bin:/bin/sync\r\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\r\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\r\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\r\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\r\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\r\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\r\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\r\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\r\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\r\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\r\nirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin\r\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\r\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\r\nsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin\r\nsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin\r\nsystemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin\r\nmessagebus:x:103:106::/nonexistent:/usr/sbin/nologin\r\nsshd:x:104:65534::/run/sshd:/usr/sbin/nologin\r\nuser:x:1000:1000:Ubuntu,,,:/home/user:/bin/bash\r\nadmin:x:1001:1001:Administrator,,,:/home/admin:/bin/bash\r\nftp:x:105:65534::/srv/ftp:/usr/sbin/nologin\r\n".to_string()
        ),

        "/etc/shadow" => Some(
            "cat: /etc/shadow: Permission denied\r\n".to_string()
        ),

        "/etc/hostname" => Some(
            "server01\r\n".to_string()
        ),

        "/etc/hosts" => Some(
            "127.0.0.1\tlocalhost\r\n127.0.1.1\tserver01\r\n\r\n# The following lines are desirable for IPv6 capable hosts\r\n::1     ip6-localhost ip6-loopback\r\nfe00::0 ip6-localnet\r\nff00::0 ip6-mcastprefix\r\nff02::1 ip6-allnodes\r\nff02::2 ip6-allrouters\r\n".to_string()
        ),

        "/etc/issue" => Some(
            "Ubuntu 20.04.4 LTS \\r\n \\l\r\n".to_string()
        ),

        "/etc/os-release" => Some(
            "NAME=\"Ubuntu\"\r\nVERSION=\"20.04.4 LTS (Focal Fossa)\"\r\nID=ubuntu\r\nID_LIKE=debian\r\nPRETTY_NAME=\"Ubuntu 20.04.4 LTS\"\r\nVERSION_ID=\"20.04\"\r\nHOME_URL=\"https://www.ubuntu.com/\"\r\nSUPPORT_URL=\"https://help.ubuntu.com/\"\r\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\r\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\r\nVERSION_CODENAME=focal\r\nUBUNTU_CODENAME=focal\r\n".to_string()
        ),

        // Configuration files
        "/etc/ssh/sshd_config" => Some(
            "#\t$OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $\r\n\r\n# This is the sshd server system-wide configuration file.  See\r\n# sshd_config(5) for more information.\r\n\r\n# This sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin\r\n\r\n# The strategy used for options in the default sshd_config shipped with\r\n# OpenSSH is to specify options with their default value where\r\n# possible, but leave them commented.  Uncommented options override the\r\n# default value.\r\n\r\nPort 22\r\n#AddressFamily any\r\n#ListenAddress 0.0.0.0\r\n#ListenAddress ::\r\n\r\nHostKey /etc/ssh/ssh_host_rsa_key\r\nHostKey /etc/ssh/ssh_host_ecdsa_key\r\nHostKey /etc/ssh/ssh_host_ed25519_key\r\n\r\n# Ciphers and keying\r\n#RekeyLimit default none\r\n\r\n# Logging\r\n#SyslogFacility AUTH\r\n#LogLevel INFO\r\n\r\n# Authentication:\r\n\r\n#LoginGraceTime 2m\r\nPermitRootLogin no\r\n#StrictModes yes\r\n#MaxAuthTries 6\r\n#MaxSessions 10\r\n\r\n#PubkeyAuthentication yes\r\n\r\n# Expect .ssh/authorized_keys2 to be disregarded by default in future.\r\n#AuthorizedKeysFile .ssh/authorized_keys .ssh/authorized_keys2\r\n\r\n#AuthorizedPrincipalsFile none\r\n\r\n#AuthorizedKeysCommand none\r\n#AuthorizedKeysCommandUser nobody\r\n\r\n# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts\r\n#HostbasedAuthentication no\r\n# Change to yes if you don't trust ~/.ssh/known_hosts for\r\n# HostbasedAuthentication\r\n#IgnoreUserKnownHosts no\r\n# Don't read the user's ~/.rhosts and ~/.shosts files\r\n#IgnoreRhosts yes\r\n\r\n# To disable tunneled clear text passwords, change to no here!\r\nPasswordAuthentication yes\r\n#PermitEmptyPasswords no\r\n\r\n# Change to yes to enable challenge-response passwords (beware issues with\r\n# some PAM modules and threads)\r\nChallengeResponseAuthentication no\r\n\r\n# Kerberos options\r\n#KerberosAuthentication no\r\n#KerberosOrLocalPasswd yes\r\n#KerberosTicketCleanup yes\r\n#KerberosGetAFSToken no\r\n\r\n# GSSAPI options\r\n#GSSAPIAuthentication no\r\n#GSSAPICleanupCredentials yes\r\n#GSSAPIStrictAcceptorCheck yes\r\n#GSSAPIKeyExchange no\r\n\r\n# Set this to 'yes' to enable PAM authentication, account processing,\r\n# and session processing. If this is enabled, PAM authentication will\r\n# be allowed through the ChallengeResponseAuthentication and\r\n# PasswordAuthentication.  Depending on your PAM configuration,\r\n# PAM authentication via ChallengeResponseAuthentication may bypass\r\n# the setting of \"PermitRootLogin without-password\".\r\n# If you just want the PAM account and session checks to run without\r\n# PAM authentication, then enable this but set PasswordAuthentication\r\n# and ChallengeResponseAuthentication to 'no'.\r\nUsePAM yes\r\n\r\n#AllowAgentForwarding yes\r\n#AllowTcpForwarding yes\r\n#GatewayPorts no\r\nX11Forwarding yes\r\n#X11DisplayOffset 10\r\n#X11UseLocalhost yes\r\n#PermitTTY yes\r\nPrintMotd no\r\n#PrintLastLog yes\r\n#TCPKeepAlive yes\r\n#PermitUserEnvironment no\r\n#Compression delayed\r\n#ClientAliveInterval 0\r\n#ClientAliveCountMax 3\r\n#UseDNS no\r\n#PidFile /var/run/sshd.pid\r\n#MaxStartups 10:30:100\r\n#PermitTunnel no\r\n#ChrootDirectory none\r\n#VersionAddendum none\r\n\r\n# no default banner path\r\n#Banner none\r\n\r\n# Allow client to pass locale environment variables\r\nAcceptEnv LANG LC_*\r\n\r\n# override default of no subsystems\r\nSubsystem sftp	/usr/lib/openssh/sftp-server\r\n\r\n# Example of overriding settings on a per-user basis\r\n#Match User anoncvs\r\n#	X11Forwarding no\r\n#	AllowTcpForwarding no\r\n#	PermitTTY no\r\n#	ForceCommand cvs server\r\n".to_string()
        ),

        "/etc/apache2/apache2.conf" => Some(
            "# This is the main Apache server configuration file.  It contains the\r\n# configuration directives that give the server its instructions.\r\n# See http://httpd.apache.org/docs/2.4/ for detailed information about\r\n# the directives and /usr/share/doc/apache2/README.Debian about Debian specific\r\n# hints.\r\n#\r\n#\r\n# Summary of how the Apache 2 configuration works in Debian:\r\n# The Apache 2 web server configuration in Debian is quite different to\r\n# upstream's suggested way to configure the web server. This is because Debian's\r\n# default Apache2 installation attempts to make adding and removing modules,\r\n# virtual hosts, and extra configuration directives as flexible as possible, in\r\n# order to make automating the changes and administering the server as easy as\r\n# possible.\r\n\r\n# It is split into several files forming the configuration hierarchy outlined\r\n# below, all located in the /etc/apache2/ directory:\r\n#\r\n#	/etc/apache2/\r\n#	|-- apache2.conf\r\n#	|	`--  ports.conf\r\n#	|-- mods-enabled\r\n#	|	|-- *.load\r\n#	|	`-- *.conf\r\n#	|-- conf-enabled\r\n#	|	`-- *.conf\r\n# 	`-- sites-enabled\r\n#	 	`-- *.conf\r\n#\r\n#\r\n# * apache2.conf is the main configuration file (this file). It puts the pieces\r\n#   together by including all remaining configuration files when starting up the\r\n#   web server.\r\n#\r\n# * ports.conf is always included from the main configuration file. It is\r\n#   supposed to determine listening ports for incoming connections which can be\r\n#   customized anytime.\r\n#\r\n# * Configuration files in the mods-enabled/, conf-enabled/ and sites-enabled/\r\n#   directories contain particular configuration snippets which manage modules,\r\n#   global configuration fragments, or virtual host configurations,\r\n#   respectively.\r\n#\r\n#   They are activated by symlinking available configuration files from their\r\n#   respective *-available/ counterparts. These should be managed by using our\r\n#   helpers a2enmod/a2dismod, a2ensite/a2dissite and a2enconf/a2disconf. See\r\n#   their respective man pages for detailed information.\r\n#\r\n# * The binary is called apache2. Due to the use of environment variables, in\r\n#   the default configuration, apache2 needs to be started/stopped with\r\n#   /etc/init.d/apache2 or apache2ctl. Calling /usr/bin/apache2 directly will not\r\n#   work with the default configuration.\r\n\r\n\r\n# Global configuration\r\n#\r\n\r\n#\r\n# ServerRoot: The top of the directory tree under which the server's\r\n# configuration, error, and log files are kept.\r\n#\r\n# NOTE!  If you intend to place this on an NFS (or otherwise network)\r\n# mounted filesystem then please read the Mutex documentation (available\r\n# at <URL:http://httpd.apache.org/docs/2.4/mod/core.html#mutex>);\r\n# you will save yourself a lot of trouble.\r\n#\r\n# Do NOT add a slash at the end of the directory path.\r\n#\r\n#ServerRoot \"/etc/apache2\"\r\n\r\n#\r\n# The accept serialization lock file MUST BE STORED ON A LOCAL DISK.\r\n#\r\n#Mutex file:${APACHE_LOCK_DIR} default\r\n\r\n#\r\n# The directory where shm and other runtime files will be stored.\r\n#\r\n\r\nDefaultRuntimeDir ${APACHE_RUN_DIR}\r\n\r\n#\r\n# PidFile: The file in which the server should record its process\r\n# identification number when it starts.\r\n# This needs to be set in /etc/apache2/envvars\r\n#\r\nPidFile ${APACHE_PID_FILE}\r\n\r\n#\r\n# Timeout: The number of seconds before receives and sends time out.\r\n#\r\nTimeout 300\r\n\r\n#\r\n# KeepAlive: Whether or not to allow persistent connections (more than\r\n# one request per connection). Set to \"Off\" to deactivate.\r\n#\r\nKeepAlive On\r\n\r\n#\r\n# MaxKeepAliveRequests: The maximum number of requests to allow\r\n# during a persistent connection. Set to 0 to allow an unlimited amount.\r\n# We recommend you leave this number high, for maximum performance.\r\n#\r\nMaxKeepAliveRequests 100\r\n\r\n#\r\n# KeepAliveTimeout: Number of seconds to wait for the next request from the\r\n# same client on the same connection.\r\n#\r\nKeepAliveTimeout 5\r\n\r\n\r\n# These need to be set in /etc/apache2/envvars\r\nUser ${APACHE_RUN_USER}\r\nGroup ${APACHE_RUN_GROUP}\r\n\r\n#\r\n# HostnameLookups: Log the names of clients or just their IP addresses\r\n# e.g., www.apache.org (on) or 204.62.129.132 (off).\r\n# The default is off because it'd be overall better for the net if people\r\n# had to knowingly turn this feature on, since enabling it means that\r\n# each client request will result in AT LEAST one lookup request to the\r\n# nameserver.\r\n#\r\nHostnameLookups Off\r\n\r\n# ErrorLog: The location of the error log file.\r\n# If you do not specify an ErrorLog directive within a <VirtualHost>\r\n# container, error messages relating to that virtual host will be\r\n# logged here.  If you *do* define an error logfile for a <VirtualHost>\r\n# container, that host's errors will be logged there and not here.\r\n#\r\nErrorLog ${APACHE_LOG_DIR}/error.log\r\n\r\n#\r\n# LogLevel: Control the severity of messages logged to the error_log.\r\n# Available values: trace8, ..., trace1, debug, info, notice, warn,\r\n# error, crit, alert, emerg.\r\n# It is also possible to configure the log level for particular modules, e.g.\r\n# \"LogLevel info ssl:warn\"\r\n#\r\nLogLevel warn\r\n\r\n# Include module configuration:\r\nIncludeOptional mods-enabled/*.load\r\nIncludeOptional mods-enabled/*.conf\r\n\r\n# Include list of ports to listen on\r\nInclude ports.conf\r\n\r\n\r\n# Sets the default security model of the Apache2 HTTPD server. It does\r\n# not allow access to the root filesystem outside of /usr/share and /var/www.\r\n# The former is used by web applications packaged in Debian,\r\n# the latter may be used for local directories served by the web server. If\r\n# your system is serving content from a sub-directory in /srv you must allow\r\n# access here, or in any related virtual host.\r\n<Directory />\r\n	Options FollowSymLinks\r\n	AllowOverride None\r\n	Require all denied\r\n</Directory>\r\n\r\n<Directory /usr/share>\r\n	AllowOverride None\r\n	Require all granted\r\n</Directory>\r\n\r\n<Directory /var/www/>\r\n	Options Indexes FollowSymLinks\r\n	AllowOverride None\r\n	Require all granted\r\n</Directory>\r\n\r\n#<Directory /srv/>\r\n#	Options Indexes FollowSymLinks\r\n#	AllowOverride None\r\n#	Require all granted\r\n#</Directory>\r\n\r\n\r\n\r\n\r\n# AccessFileName: The name of the file to look for in each directory\r\n# for additional configuration directives.  See also the AllowOverride\r\n# directive.\r\n#\r\nAccessFileName .htaccess\r\n\r\n#\r\n# The following lines prevent .htaccess and .htpasswd files from being\r\n# viewed by Web clients.\r\n#\r\n<FilesMatch \"^.ht\">\r\n	Require all denied\r\n</FilesMatch>\r\n\r\n\r\n#\r\n# The following directives define some format nicknames for use with\r\n# a CustomLog directive.\r\n#\r\n# These deviate from the Common Log Format definitions in that they use %O\r\n# (the actual bytes sent including headers) instead of %b (the size of the\r\n# requested file), because the latter makes it impossible to detect partial\r\n# requests.\r\n#\r\n# Note that the use of %{X-Forwarded-For}i instead of %h is not recommended.\r\n# Use mod_remoteip instead.\r\n#\r\nLogFormat \"%v:%p %h %l %u %t \\\"%r\\\" %>s %O \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" vhost_combined\r\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %O \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined\r\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %O\" common\r\nLogFormat \"%{Referer}i -> %U\" referer\r\nLogFormat \"%{User-agent}i\" agent\r\n\r\n# Include of directories ignores editors' and dpkg's backup files,\r\n# see README.Debian for details.\r\n\r\n# Include generic snippets of statements\r\nIncludeOptional conf-enabled/*.conf\r\n\r\n# Include the virtual host configurations:\r\nIncludeOptional sites-enabled/*.conf\r\n\r\n# vim: syntax=apache ts=4 sw=4 sts=4 sr noet\r\n".to_string()
        ),

        // Log files
        "/var/log/auth.log" => Some(
            "Mar 22 08:46:11 server01 sshd[1289]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=183.62.140.253  user=root\r\nMar 22 08:46:13 server01 sshd[1289]: Failed password for root from 183.62.140.253 port 43652 ssh2\r\nMar 22 08:46:19 server01 sshd[1289]: Failed password for root from 183.62.140.253 port 43652 ssh2\r\nMar 22 08:46:23 server01 sshd[1289]: Failed password for root from 183.62.140.253 port 43652 ssh2\r\nMar 22 08:46:23 server01 sshd[1289]: Connection closed by authenticating user root 183.62.140.253 port 43652 [preauth]\r\nMar 22 08:46:23 server01 sshd[1289]: PAM 2 more authentication failures; logname= uid=0 euid=0 tty=ssh ruser= rhost=183.62.140.253  user=root\r\nMar 22 15:10:13 server01 sudo:     user : TTY=pts/0 ; PWD=/home/user ; USER=root ; COMMAND=/usr/bin/apt update\r\nMar 22 15:10:31 server01 sudo:     user : TTY=pts/0 ; PWD=/home/user ; USER=root ; COMMAND=/usr/bin/apt upgrade\r\n".to_string()
        ),

        "/var/log/syslog" => Some(
            "Mar 22 08:00:01 server01 CRON[1221]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)\r\nMar 22 08:17:01 server01 CRON[1244]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)\r\nMar 22 09:00:01 server01 CRON[1265]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)\r\nMar 22 09:17:01 server01 CRON[1298]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)\r\nMar 22 10:00:01 server01 CRON[1313]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)\r\nMar 22 10:17:01 server01 CRON[1340]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)\r\nMar 22 11:00:01 server01 CRON[1367]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)\r\nMar 22 11:17:01 server01 CRON[1387]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)\r\nMar 22 12:00:01 server01 CRON[1411]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)\r\nMar 22 12:17:01 server01 CRON[1458]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)\r\nMar 22 13:00:01 server01 CRON[1495]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)\r\nMar 22 13:17:01 server01 CRON[1521]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)\r\nMar 22 14:00:01 server01 CRON[1555]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)\r\nMar 22 14:17:01 server01 CRON[1578]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)\r\nMar 22 15:00:01 server01 CRON[1599]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)\r\nMar 22 15:15:47 server01 kernel: [16499.156152] [UFW BLOCK] IN=ens33 OUT= MAC=00:0c:29:3d:5b:93:00:50:56:c0:00:08:08:00 SRC=192.168.126.128 DST=192.168.126.130 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=64419 DF PROTO=TCP SPT=40472 DPT=111 WINDOW=29200 RES=0x00 SYN URGP=0 \r\nMar 22 15:15:47 server01 kernel: [16499.166152] [UFW BLOCK] IN=ens33 OUT= MAC=00:0c:29:3d:5b:93:00:50:56:c0:00:08:08:00 SRC=192.168.126.128 DST=192.168.126.130 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=64420 DF PROTO=TCP SPT=40472 DPT=111 WINDOW=29200 RES=0x00 SYN URGP=0 \r\n".to_string()
        ),

        // User files
        "~/.bash_history" | "/home/user/.bash_history" => Some(
            "ls -la\r\ncd /var/www/html\r\nls -la\r\nsudo apt update\r\nsudo apt upgrade\r\nnano /etc/ssh/sshd_config\r\nsudo service ssh restart\r\nps aux | grep apache\r\nsystemctl status apache2\r\nuname -a\r\ncat /etc/passwd\r\nw\r\nfree -m\r\ndf -h\r\nping -c 4 google.com\r\ntop\r\nkill 1234\r\nmkdir test\r\ncd test\r\nrm -rf test\r\nsudo iptables -L\r\nnetstat -tulpn\r\n".to_string()
        ),

        "/home/user/.ssh/authorized_keys" => Some(
            "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDN7b+0Vq3Cf3kH7RNl+O1+cYZNJJW3NJbSkCR3MkjvmF2HpU9aMWBCEgGVmOT8RoI+R+6DML8eLQrLjNeUILZ5xQWJgmJ9mGWQ7Ny0/MuGi3XrFT3UfmWEAcuWCJpx6It8pMQxA+bM4apz/RjUFw5Qet0jFnI6RTUgvMZeQSjDpkyo0GwBVGYH7F/oH/5C3lULWTwUbSWTQGR5BsaD8TDYBVwYkfwPjAY9wvHL0jRNDlRxSLBEvwkkLJiQo4Nq1cE4Sy9k7HwBVBBFt+dBQY3ZqrT5K8KFjYyoFCBgfUPI4V/yksNvLQBLs4Pb1TDC3DpLkK1S+lK8oyyN2itXV7ycQcVjg0LZ/IZrVLGgVnDgn0jI4kLwCVaRGV3uy1sVKPSyvdTYZ9YYESwQ5QG1U9GaHHZUxVFUgAYSZRoJgfMfYzX5a0KZ29Mv7bUQhXwZhDhh1CFYSSmLCJjZH4IkSEqQC0Iz1Lj/kRzN6q0T9hyL3QUHfgQypC+pDPUdTbE= user@server01\r\n".to_string()
        ),

        // Default "file not found" for paths in common locations
        path if path.starts_with("/etc/") ||
            path.starts_with("/var/") ||
            path.starts_with("/usr/") ||
            path.starts_with("/home/") ||
            path.starts_with("/root/") ||
            path.starts_with("/proc/") => Some(
            format!("cat: {}: No such file or directory\r\n", path)
        ),

        // Handle relative paths within allowed directories
        _ => None, // Return None for any other path, will trigger the default "file not found" message
    };
    log::trace!("Fake file content for {}: {:?}", file_path, res);
    res
}